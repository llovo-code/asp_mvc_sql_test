//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test_ASP_MVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseEntities : DbContext
    {
        public DatabaseEntities()
            : base("name=DatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Articulos> Articulos { get; set; }
        public virtual DbSet<Categoria_Articulo> Categoria_Articulo { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Lineas_de_Pedido> Lineas_de_Pedido { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<ListArticulos> ListArticulos { get; set; }
        public virtual DbSet<ListCliente> ListCliente { get; set; }
    
        public virtual int AddArticulo(string codigo_Arc, string descp, string codCat, Nullable<double> precio)
        {
            var codigo_ArcParameter = codigo_Arc != null ?
                new ObjectParameter("Codigo_Arc", codigo_Arc) :
                new ObjectParameter("Codigo_Arc", typeof(string));
    
            var descpParameter = descp != null ?
                new ObjectParameter("Descp", descp) :
                new ObjectParameter("Descp", typeof(string));
    
            var codCatParameter = codCat != null ?
                new ObjectParameter("CodCat", codCat) :
                new ObjectParameter("CodCat", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddArticulo", codigo_ArcParameter, descpParameter, codCatParameter, precioParameter);
        }
    
        public virtual int AddCliente(string codCliente, string pN, string sN, string pA, string sA)
        {
            var codClienteParameter = codCliente != null ?
                new ObjectParameter("CodCliente", codCliente) :
                new ObjectParameter("CodCliente", typeof(string));
    
            var pNParameter = pN != null ?
                new ObjectParameter("PN", pN) :
                new ObjectParameter("PN", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var pAParameter = pA != null ?
                new ObjectParameter("PA", pA) :
                new ObjectParameter("PA", typeof(string));
    
            var sAParameter = sA != null ?
                new ObjectParameter("SA", sA) :
                new ObjectParameter("SA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCliente", codClienteParameter, pNParameter, sNParameter, pAParameter, sAParameter);
        }
    
        public virtual ObjectResult<ListarArticulos_Result> ListarArticulos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarArticulos_Result>("ListarArticulos");
        }
    
        public virtual ObjectResult<ListarClientes_Result> ListarClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarClientes_Result>("ListarClientes");
        }
    }
}
